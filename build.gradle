plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.thc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //여기서부터 추가 시작
    //domain
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //db
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.0' //db


    //2024-05-21 시작
    //mybatis 사용
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3' //3.0.2 => 3.0.3으로 상승!!
    //swagger 사용!!!
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' //swagger 사용을 위함.
    //2024-05-21 종료

    //2024-05-29 시작
    // aws 파일 업로드를 위함
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.460'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.13.0'
    //2024-05-29 종료

    // 시큐리티 사용을 위함
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    //implementation 'com.auth0:java-jwt:4.4.0'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'

    // 추가 종료

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //thymeleaf 재기동 없이 실행하기 위한 코드
    compileOnly("org.springframework.boot:spring-boot-devtools")

    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 관련 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 관련 대응 코드

}

tasks.named('test') {
    useJUnitPlatform()
}
